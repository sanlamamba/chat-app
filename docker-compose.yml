version: "3.8"

services:
  mongodb:
    image: mongo:7.0
    container_name: chat-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - chat-network

  mongo-express:
    image: mongo-express:1.0
    container_name: chat-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongodb
    networks:
      - chat-network

  redis:
    image: redis:7.2-alpine
    container_name: chat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - chat-network

  # server:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   container_name: chat-server
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     NODE_ENV: production
  #     PORT: 3000
  #     MONGODB_URI: mongodb://mongodb:27017/realtime-chat
  #     REDIS_URL: redis://redis:6379
  #   depends_on:
  #     - mongodb
  #     - redis
  #   volumes:
  #     - ./server/logs:/app/logs
  #   networks:
  #     - chat-network

volumes:
  mongodb_data:
  mongodb_config:
  redis_data:

networks:
  chat-network:
    driver: bridge
